{"version":3,"sources":["reportWebVitals.js","components/Home.js","components/Login.js","components/ResetPassword.js","components/VideoChat.js","components/Room.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Home","Login","navigate","useNavigate","useState","email","setEmail","password","setPassword","username","setUsername","error","setError","useEffect","token","localStorage","getItem","axios","post","header","res","catch","console","log","data","loginHandler","e","a","preventDefault","config","setItem","state","response","setTimeout","registerHandler","Helmet","charset","content","name","rel","href","src","crossorigin","className","action","onSubmit","type","placeholder","required","value","onChange","target","id","onClick","document","querySelector","classList","add","alt","remove","ResetPassword","socket","io","secure","reconnect","rejectUnauthorized","VideoChat","roomId","setRoomId","useRef","current","useLocation","base64","split","replace","payload","JSON","parse","window","atob","user","on","err","alert","emit","roomID","joined","Room","localStreamRef","getElementsByClassName","message","setMessage","chats","setChats","useParams","messageRef","remoteVideos","setRemoteVideos","addEventListener","event","currentTarget","scroll","top","scrollHeight","behavior","recieveMessage","device","rtpCapabilities","producerTransport","person_id","time","Date","now","classType","newUser","socketId","getLocalStream","producer","consumerTransports","params","encodings","rid","maxBitrate","scalabilityMode","codecOptions","videoGoogleStartBitrate","navigator","mediaDevices","getUserMedia","audio","video","width","min","max","height","streamSuccess","stream","srcObject","play","mesaage","track","getVideoTracks","joinRoom","roomName","createDevice","Device","load","routerRtpCapabilities","createSendTransport","warn","consumer","callback","errback","dtlsParameters","parameters","kind","rtpParameters","appData","producersExist","getProducers","connectSendTransport","produce","signalNewConsumerTransport","remoteProducerId","consumerTransport","createRecvTransport","serverConsumerTransportId","connectRecvTransport","producerId","producerIds","forEach","consume","streamP","MediaStream","serverConsumerId","producerToClose","find","transportData","close","filter","class","ref","map","rm","autoPlay","chat","ReactDOM","render","path","element","getElementById"],"mappings":"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","file":"static/js/main.8534f3aa.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\n\nfunction Home() {\n  return (\n    <div>\n      this  a home route\n    </div>\n  )\n}\n\nexport default Home\n","import React from 'react'\nimport './Login.css'\nimport { Helmet } from 'react-helmet'\nimport { useState, useEffect } from 'react'\nimport { useNavigate,} from 'react-router-dom'\nimport axios from 'axios'\n// import validateToken from '../utils/validateToken';\nfunction Login() {\n    const navigate = useNavigate();\n    const [email,setEmail] = useState(\"\");\n    const [password,setPassword]= useState(\"\");\n    const [username,setUsername] = useState(\"\");\n    const [error,setError] = useState(\"\");\n\n\n    useEffect(()=>{\n        \n            \n                \n                    const token = localStorage.getItem(\"authToken\");\n                    \n                    \n                    const config ={\n                            header:{\n                                'Content-type':\"application/json\"\n                            }\n                        }\n                    const {data} =axios.post('/auth/validateToken',{token},config).then((res)=>{\n                    \n                            navigate('/video-chat');\n                        \n                    }).catch((error)=>{\n                            console.log(error);\n                            navigate(\"/login\");\n                    \n                    })\n                \n                    \n\n\n    },[navigate]);\n\n    function signInHandler() {\n        const container = document.querySelector(\".container\");\n       \n        container.classList.remove(\"sign-up-mode\");\n\n    }\n    function signUpHandler() {\n\n\n        const container = document.querySelector(\".container\");\n        container.classList.add(\"sign-up-mode\");\n\n    }\n    const loginHandler = async (e) => {\n        // alert(\"this is called\");\n        e.preventDefault();\n        const config ={\n            header:{\n                'Content-type':\"application/json\"\n            }\n        }\n        try {\n            const {data} = await axios.post('/auth/login',{email,password,username},config);\n            console.log(\"data\",data);\n            \n            localStorage.setItem(\"authToken\",data.token);\n            navigate('/video-chat',{state:username});\n            \n            \n\n            \n\n        } catch (error) {\n             console.log(error.response.data.error);\n            setError(error.response.data.error);\n            setTimeout(()=>{setError(\"\")\n            },5000);\n           \n            \n        }\n\n\n    }\n     const registerHandler=async(e)=>{\n        e.preventDefault();\n        const config ={\n            header:{\n                'Content-type':\"application/json\"\n            }\n        }\n        try{\n            const {data} = await axios.post('/auth/register',{username,password,email},config);\n                console.log(\"data\",data);\n            \n                localStorage.setItem('authToken',data.token);\n                navigate('/video-chat',{state:username});\n            \n           \n            \n        } catch (error) {\n            setError(error.response.data.error);\n            setTimeout(()=>{setError(\"\")\n            },5000);\n            \n        }\n\n    }\n    return (\n\n        <div>\n\n            <Helmet>\n                <meta charset=\"UTF-8\" />\n                <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n                <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n                <title>Sign In & Sign Up Form</title>\n                <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" />\n                <link href=\"https://fonts.googleapis.com/css2?family=Poppins:wght@200;300;400;500;600;700;800&display=swap\" rel=\"stylesheet\" />\n                <script src=\"https://kit.fontawesome.com/1788c719dd.js\" crossorigin=\"anonymous\"></script>\n            </Helmet>\n            <div className=\"container\">\n            \n                <div className=\"container__forms\">\n                    <div className=\"form\" >\n                        <form action=\"\" className=\"form__sign-in\" onSubmit={loginHandler}>\n                            <h2 className=\"form__title\">Sign In</h2>\n                            {error && <span>{error}</span>}\n                            <div className=\"form__input-field\">\n                                <i className=\"fas fa-user\"></i>\n                                <input type=\"text\" placeholder=\"Username\" required name=\"username\" value={username} onChange={(e)=>{\n                                    setUsername(e.target.value);\n                                }}/>\n                            </div>\n                            <div className=\"form__input-field\">\n                                <i className=\"fas fa-lock\"></i>\n                                <input type=\"password\" placeholder=\"Password\" required name=\"password\" value ={password} onChange={(e)=>{\n                                    setPassword(e.target.value);\n                                }}/>\n                            </div>\n                            <input className=\"form__submit\" type=\"submit\" value=\"Login\" />\n                            <p className=\"form__social-text\">Or Sign in with social platforms</p>\n                            <div className=\"form__social-media\">\n                                <a href=\"/\" className=\"form__social-icons\">\n                                    <i className=\"fab fa-facebook-f\"></i>\n                                </a>\n                                <a href=\"/\" className=\"form__social-icons\">\n                                    <i className=\"fab fa-twitter\"></i>\n                                </a>\n                                <a href=\"/\" className=\"form__social-icons\">\n                                    <i className=\"fab fa-google\"></i>\n                                </a>\n                                <a href=\"/\" className=\"form__social-icons\">\n                                    <i className=\"fab fa-linkedin-in\"></i>\n                                </a>\n                            </div>\n                        </form>\n\n                        <form onSubmit={registerHandler} className=\"form__sign-up\">\n                            <h2 className=\"form__title\">Sign Up</h2>\n                            {error && <span>{error}</span>}\n                            <div className=\"form__input-field\">\n                                <i className=\"fas fa-user\"></i>\n                                <input type=\"text\" placeholder=\"Username\" required name=\"username\" value={username} onChange={(e)=>{\n                                    setUsername(e.target.value);\n                                }}/>\n                            </div>\n                            <div className=\"form__input-field\">\n                                <i className=\"fas fa-envelope\"></i>\n                                <input type=\"text\" placeholder=\"Email\" required name=\"email\" value={email} onChange={(e)=>{\n                                    setEmail(e.target.value);\n                                }}/>\n                            </div>\n                            <div className=\"form__input-field\">\n                                <i className=\"fas fa-lock\"></i>\n                                <input type=\"password\" placeholder=\"Password\" required name=\"password\" value={password} onChange={(e)=>{\n                                    setPassword(e.target.value);\n                                }}/>\n                            </div>\n\n                            <input className=\"form__submit\" type=\"submit\" value=\"Sign Up\" />\n\n                            <p className=\"form__social-text\">Or Sign up with social platforms</p>\n                            <div className=\"form__social-media\">\n                                <a href=\"/\" className=\"form__social-icons\">\n                                    <i className=\"fab fa-facebook-f\"></i>\n                                </a>\n                                <a href=\"/\" className=\"form__social-icons\">\n                                    <i className=\"fab fa-twitter\"></i>\n                                </a>\n                                <a href=\"/\" className=\"form__social-icons\">\n                                    <i className=\"fab fa-google\"></i>\n                                </a>\n                                <a href=\"/\" className=\"form__social-icons\">\n                                    <i className=\"fab fa-linkedin-in\"></i>\n                                </a>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n                <div className=\"container__panels\">\n                    <div className=\"panel panel__left\">\n                        <div className=\"panel__content\">\n                            <h3 className=\"panel__title\">New here ?</h3>\n                            <p className=\"panel__paragraph\">\n                                Lorem ipsum dolor sit amet consectetur adipisicing elit.\n                                Doloremque adipisci tempore aliquid?\n              </p>\n                            <button className=\"btn btn-transparent\" id=\"sign-up-btn\" onClick={signUpHandler}>\n                                Sign Up\n              </button>\n                        </div>\n                        <img className=\"panel__image\" src=\"https://stories.freepiklabs.com/storage/11588/market-launch-amico-2628.png\" alt=\"\" />\n                    </div>\n                    <div className=\"panel panel__right\">\n                        <div className=\"panel__content\">\n                            <h3 className=\"panel__title\">One of us ?</h3>\n                            <p className=\"panel__paragraph\">\n                                Lorem ipsum dolor sit amet consectetur adipisicing elit.\n                                Doloremque adipisci tempore aliquid?\n              </p>\n                            <button className=\"btn btn-transparent\" id=\"sign-in-btn\" onClick={signInHandler}>\n                                Sign In\n              </button>\n                        </div>\n                        <img className=\"panel__image\" src=\"https://www.pngkey.com/png/full/444-4444270_ia-press-play-website.png\" alt=\"\" />\n                    </div>\n                </div>\n            </div>\n        </div>\n\n\n    )\n}\n\nexport default Login;","import React from 'react'\n\nfunction ResetPassword() {\n    return (\n        <div>\n            this is resetpassword route\n        </div>\n    )\n}\n\nexport default ResetPassword\n","import React from 'react'\nimport {useEffect,useState,useRef} from 'react';\nimport {useNavigate,useLocation} from 'react-router-dom';\nimport io from 'socket.io-client';\nimport axios from 'axios';\n\nimport '../'\nexport const socket = io('/',{\n   \n secure:true,reconnect: true, rejectUnauthorized : false,});\n\n\n\n\n\n\n\nfunction VideoChat() {\n    const [roomId,setRoomId] =useState(\"\");\n    const navigate= useNavigate();\n    \n    // console.log(username);\n    const username =useRef();\n    username.current = useLocation().state;\n    useEffect(()=>{\n        if(!localStorage.getItem('authToken')){\n            navigate(\"/login\",{username:\"plese login to continue\"});\n        }\n        const token = localStorage.getItem('authToken');\n       \n       \n            const config ={\n                header:{\n                    'Content-type':\"application/json\"\n                }\n            }\n            axios.post('/auth/validateToken',{token},config).then((res)=>{\n                const base64Url= token.split('.')[1];\n                const base64 = base64Url.replace('-','+').replace('_','/');\n                const payload = JSON.parse(window.atob(base64));\n                username.current = payload.user;\n                socket.on('connect',()=>{\n  \n                    console.log('you are connected with id ',socket.id)\n                    console.log(username.current);\n                    // socket.emit('register',username.current);\n                    });\n            \n            }).catch((error)=>{\n                navigate(\"/login\",{state:\"please login to continue\"});\n        \n            })\n    \n    });\n\n\n    const creatRoomHandler = ()=>{\n        alert('button clicked');\n        socket.emit('create-room',roomID=>{\n\n            navigate(`/room/${roomID}`,{state:{joined:\"true\",username:username.current}});\n        });\n\n\n    }\n    const joinRoomHandler = (e)=>{\n        e.preventDefault();\n        let video = true;\n        socket.emit('join-room',roomId,username.current,(roomId)=>{\n            console.log('joined room ',roomId,username.current)\n            navigate(`/room/${roomId}`,{state:{joined:\"true\",username:username.current}});\n        });\n        \n\n    }\n    socket.on('connect_error',(err)=>{\n        \n    })\n    return (\n        <div>\n\n            \n            <button type=\"button\" onClick={creatRoomHandler}>Create room</button>\n\n            <form onSubmit={joinRoomHandler}>\n                <input type=\"text\" placeholder=\"Rooom ID\" value={roomId} onChange={(e)=>{\n                    setRoomId(e.target.value)\n                }}/>\n                <button type=\"submit\">Join Room</button>\n            </form>\n\n\n\n            <button type=\"button\" name=\"login\" onClick={()=>{\n                localStorage.setItem('authToken',\"\");\n                navigate('/login');\n            }} >Logout</button>            \n        </div>)\n   \n}\n\nexport default VideoChat\n","import React from \"react\";\nimport \"./Room.css\";\nimport { socket } from \"../components/VideoChat\";\nimport { useParams, useNavigate, useLocation } from \"react-router-dom\";\nimport { useState, useRef, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Device } from \"mediasoup-client\";\n// import validateToken from '../utils/validateToken';\n// import { receiveMessageOnPort } from 'worker_threads';\nfunction Room() {\n  // console.log('stte:',state);\n  const localStreamRef = useRef(null);\n  const remoteStreamRef = useRef(null);\n  const navigate = useNavigate();\n  const videoContainer = document.getElementsByClassName('videoContainer');\n  const [message, setMessage] = useState(\"\");\n  const [chats, setChats] = useState([]);\n  const { roomID } = useParams();\n  const messageRef = useRef();\n  const username = useRef();\n  const { state } = useLocation();\n  const [remoteVideos,setRemoteVideos] = useState([]);\n  useEffect(() => {\n    if (messageRef) {\n      messageRef.current.addEventListener(\"DOMNodeInserted\", event => {\n        const { currentTarget: target } = event;\n        target.scroll({ top: target.scrollHeight, behavior: \"smooth\" });\n      });\n    }\n  }, []);\n  useEffect(() => {\n    const token = localStorage.getItem(\"authToken\");\n\n    const config = {\n      header: {\n        \"Content-type\": \"application/json\"\n      }\n    };\n    axios\n      .post(\"/auth/validateToken\", { token }, config)\n      .then(res => {\n        const base64Url = token.split(\".\")[1];\n        const base64 = base64Url.replace(\"-\", \"+\").replace(\"_\", \"/\");\n        const payload = JSON.parse(window.atob(base64));\n        username.current = payload.user;\n\n        if (!state) {\n          navigate(\"/video-chat\");\n        } else {\n          recieveMessage(`Welcome ${state.username} to the room `, \"\");\n        }\n      })\n      .catch(error => {\n        navigate(\"/login\", { username: \"plese login to continue\" });\n      });\n  }, [navigate, state]);\n  const sendMessageHandler = () => {\n    setChats([\n      ...chats,\n      {\n        message: message,\n        person_id: username.current,\n        time: Date.now(),\n        classType: \"me\"\n      }\n    ]);\n\n    socket.emit(\"send-message\", message, roomID, username.current);\n\n    setMessage(\"\");\n  };\n  const recieveMessage = (message, username) => {\n    setChats([\n      ...chats,\n      {\n        message: message,\n        person_id: username + \":\",\n        time: Date.now(),\n        classType: \"other\"\n      }\n    ]);\n  };\n  socket.on(\"recieve-message\", (message, username) => {\n    //    alert(\"recieved\");\n    recieveMessage(message, username);\n  });\n  socket.on(\"joined\", ({ newUser }) => {\n    console.log(\"user joined \", newUser);\n   \n    recieveMessage(`${newUser} joined the chat`, \"\");\n  });\n  socket.on('connection-success',({socketId})=>{\n      console.log(socketId);\n     console.log('local stream is called')\n      getLocalStream();\n  })\n  let device;\n  let rtpCapabilities;\n  let producerTransport;\n  let consumerTransports = [];\n  let producer;\n  let consumer;\n  let isProducer = false;\n  let params = {\n    // mediasoup params\n    encodings: [\n      {\n        rid: \"r0\",\n        maxBitrate: 100000,\n        scalabilityMode: \"S1T3\"\n      },\n      {\n        rid: \"r1\",\n        maxBitrate: 300000,\n        scalabilityMode: \"S1T3\"\n      },\n      {\n        rid: \"r2\",\n        maxBitrate: 900000,\n        scalabilityMode: \"S1T3\"\n      }\n    ],\n    // https://mediasoup.org/documentation/v3/mediasoup-client/api/#ProducerCodecOptions\n    codecOptions: {\n      videoGoogleStartBitrate: 1000\n    }\n  };\n  const getLocalStream = () => {\n      console.log('getLocalStream is called ');\n    navigator.mediaDevices\n      .getUserMedia({\n        audio: true,\n        video: {\n          width: {\n            min: 640,\n            max: 1920\n          },\n          height: {\n            min: 400,\n            max: 1080\n          }\n        }\n      })\n      .then(streamSuccess)\n      .catch(error => {\n        console.log(error.message);\n      });\n  };\n  const streamSuccess = (stream) => {\n    console.log('Stream success is called ');\n    try{\n      localStreamRef.current.srcObject = stream;\n    localStreamRef.current.play();\n    }\n    catch(error)\n    {\n      console.log('error',error.mesaage);\n    }\n    const track = stream.getVideoTracks()[0]\n    params = {\n      track,\n      ...params\n    }\n  \n    joinRoom();\n\n  }\n \n  const joinRoom = () => {\n    socket.emit('join-Room', { roomName:roomID},(data) => {\n      console.log(`Router RTP Capabilities... ${data.rtpCapabilities}`)\n      // we assign to local variable and will be used when\n      // loading the client Device (see createDevice above)\n      rtpCapabilities = data.rtpCapabilities\n  \n      // once we have rtpCapabilities from the Router, create Device\n      createDevice()\n    })\n  }\n  \n  const createDevice = async () => {\n    console.log('create device is called ');\n    try {\n      device = new Device();\n\n      // https://mediasoup.org/documentation/v3/mediasoup-client/api/#device-load\n      // Loads the device with RTP capabilities of the Router (server side)\n      await device.load({\n        // see getRtpCapabilities() below\n        routerRtpCapabilities: rtpCapabilities\n      });\n\n      console.log(\"Device RTP Capabilities\", device.rtpCapabilities);\n\n      // once the device loads, create transport\n      createSendTransport();\n    } catch (error) {\n      console.log(error);\n      if (error.name === \"UnsupportedError\")\n        console.warn(\"browser not supported\");\n    }\n  };\n  const createSendTransport = () => {\n    console.log('create send transport is called ');\n    // see server's socket.on('createWebRtcTransport', sender?, ...)\n    // this is a call from Producer, so sender = true\n    socket.emit('createWebRtcTransport', { consumer: false }, ({ params }) => {\n      // The server sends back params needed\n      // to create Send Transport on the client side\n      if (params.error) {\n        console.log(params.error);\n        return;\n      }\n\n      console.log(params);\n      console.log('webrtc transport got created is called ');\n      // creates a new WebRTC Transport to send media\n      // based on the server's producer transport params\n      // https://mediasoup.org/documentation/v3/mediasoup-client/api/#TransportOptions\n      producerTransport = device.createSendTransport(params);\n\n      // https://mediasoup.org/documentation/v3/communication-between-client-and-server/#producing-media\n      // this event is raised when a first call to transport.produce() is made\n      // see connectSendTransport() below\n      producerTransport.on(\n        \"connect\",\n        async ({ dtlsParameters }, callback, errback) => {\n          try {\n            // Signal local DTLS parameters to the server side transport\n            // see server's socket.on('transport-connect', ...)\n            await socket.emit('transport-connect', {\n              dtlsParameters\n            });\n\n            // Tell the transport that parameters were transmitted.\n            callback();\n          } catch (error) {\n            errback(error);\n          }\n        }\n      );\n\n      producerTransport.on(\"produce\", async (parameters, callback, errback) => {\n        console.log(parameters);\n\n        try {\n          // tell the server to create a Producer\n          // with the following parameters and produce\n          // and expect back a server side producer id\n          // see server's socket.on('transport-produce', ...)\n          await socket.emit(\n            \"transport-produce\",\n            {\n              kind: parameters.kind,\n              rtpParameters: parameters.rtpParameters,\n              appData: parameters.appData\n            },\n            ({ id, producersExist }) => {\n              // Tell the transport that parameters were transmitted and provide it with the\n              // server side producer's id.\n              callback({ id });\n\n              // if producers exist, then join room\n              if (producersExist) getProducers();\n            }\n          );\n        } catch (error) {\n          errback(error);\n        }\n      });\n\n      connectSendTransport();\n    });\n  };\n  const connectSendTransport = async () => {\n    console.log('connectsend transport  is called ');\n    // we now call produce() to instruct the producer transport\n    // to send media to the Router\n    // https://mediasoup.org/documentation/v3/mediasoup-client/api/#transport-produce\n    // this action will trigger the 'connect' and 'produce' events above\n    producer = await producerTransport.produce(params)\n  \n    producer.on('trackended', () => {\n      console.log('track ended')\n  \n      // close video track\n    })\n  \n    producer.on('transportclose', () => {\n      console.log('transport ended')\n  \n      // close video track\n    })\n  }\n  const signalNewConsumerTransport = async remoteProducerId => {\n    await socket.emit(\n      'createWebRtcTransport',\n      { consumer: true },\n      ({ params }) => {\n        // The server sends back params needed\n        // to create Send Transport on the client side\n        if (params.error) {\n          console.log(params.error);\n          return;\n        }\n        console.log(`PARAMS... ${params}`);\n\n        let consumerTransport;\n        try {\n          consumerTransport = device.createRecvTransport(params);\n        } catch (error) {\n          // exceptions:\n          // {InvalidStateError} if not loaded\n          // {TypeError} if wrong arguments.\n          console.log(error);\n          return;\n        }\n\n        consumerTransport.on(\n          'connect',\n          async ({ dtlsParameters }, callback, errback) => {\n            try {\n              // Signal local DTLS parameters to the server side transport\n              // see server's socket.on('transport-recv-connect', ...)\n              await socket.emit(\"transport-recv-connect\", {\n                dtlsParameters,\n                serverConsumerTransportId: params.id\n              });\n\n              // Tell the transport that parameters were transmitted.\n              callback();\n            } catch (error) {\n              // Tell the transport that something was wrong\n              errback(error);\n            }\n          }\n        );\n\n        connectRecvTransport(consumerTransport, remoteProducerId, params.id);\n      }\n    );\n  };\n  socket.on(\"new-producer\", ({ producerId }) =>\n    signalNewConsumerTransport(producerId)\n  );\n  const getProducers = () => {\n    socket.emit(\"getProducers\", producerIds => {\n      console.log(producerIds);\n      // for each of the producer create a consumer\n      // producerIds.forEach(id => signalNewConsumerTransport(id))\n      producerIds.forEach(signalNewConsumerTransport);\n    });\n  };\n  const connectRecvTransport = async (\n    consumerTransport,\n    remoteProducerId,\n    serverConsumerTransportId\n  ) => {\n    // for consumer, we need to tell the server first\n    // to create a consumer based on the rtpCapabilities and consume\n    // if the router can consume, it will send back a set of params as below\n    await socket.emit(\n      \"consume\",\n      {\n        rtpCapabilities: device.rtpCapabilities,\n        remoteProducerId,\n        serverConsumerTransportId\n      },\n      async ({ params }) => {\n        if (params.error) {\n          console.log(\"Cannot Consume\");\n          return;\n        }\n\n        console.log(`Consumer Params ${params}`);\n        // then consume with the local consumer transport\n        // which creates a consumer\n        const consumer = await consumerTransport.consume({\n          id: params.id,\n          producerId: params.producerId,\n          kind: params.kind,\n          rtpParameters: params.rtpParameters\n        });\n\n        consumerTransports = [\n          ...consumerTransports,\n          {\n            consumerTransport,\n            serverConsumerTransportId: params.id,\n            producerId: remoteProducerId,\n            consumer\n          }\n        ];\n\n        // create a new div element for the new consumer media\n        // and append to the video container\n        \n       \n        // newElem.innerHTML =\n        //   '<video id=\"' +\n        //   remoteProducerId +\n        //   '\" autoplay class=\"video\" ></video>';\n        \n\n        // destructure and retrieve the video track from the producer\n        const { track } = consumer;\n\n        let streamP = new MediaStream([\n          track\n        \n        ]);\n        setRemoteVideos([\n          ...remoteVideos,\n          {\n            id:remoteProducerId,\n            stream:streamP,\n            consumer:consumer.id,\n          }\n        ])\n\n        // the server consumer started with media paused\n        // so we need to inform the server to resume\n        socket.emit(\"consumer-resume\", {\n          serverConsumerId: params.serverConsumerId\n        });\n      }\n    );\n  };\n  socket.on(\"producer-closed\", ({ remoteProducerId }) => {\n    // server notification is received when a producer is closed\n    // we need to close the client-side consumer and associated transport\n    const producerToClose = consumerTransports.find(\n      transportData => transportData.producerId === remoteProducerId\n    );\n    producerToClose.consumerTransport.close();\n    producerToClose.consumer.close();\n\n    // remove the consumer transport from the list\n    consumerTransports = consumerTransports.filter(\n      transportData => transportData.producerId !== remoteProducerId\n    );\n\n    // remove the video div element\n    // videoContainer.removeChild(\n    //   document.getElementById(`td-${remoteProducerId}`)\n    // );\n  });\n\n  return (\n    <div className=\"container-room\">\n      <div className=\"video-card\">\n      <table class=\"mainTable\">\n                <tbody>\n                    <tr>\n                        <td class=\"localColumn\">\n                        <video\n          id=\"localVideo\"\n          className=\"video\"\n          ref={localStreamRef}\n          \n        />\n        \n\n                        </td>\n                        <td class=\"remoteColumn\">\n                            <div id=\"videoContainer\">\n                              {remoteVideos.map(rm=>{\n                                return (\n                                  <video id={rm.id} src={rm.stream} key={rm.stream.id} autoPlay/>\n                                );\n                              })}\n                            </div>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n        \n        <div className=\"controls\">\n        \n        </div>\n      </div>\n      <div className=\"chat\">\n        <div className=\"content\" ref={messageRef}>\n          {chats.map(chat => {\n            return (\n              <p key={chat.time} className={chat.classType}>\n                {chat.person_id}\n                {chat.message}\n              </p>\n            );\n          })}\n        </div>\n        <div className=\"message\">\n          <input\n            type=\"text\"\n            name=\"message\"\n            id=\"input-field\"\n            value={message}\n            onChange={e => {\n              setMessage(e.target.value);\n            }}\n          />\n          <button id=\"send\" onClick={sendMessageHandler}>\n            send\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Room;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter as Router,Routes, Route} from 'react-router-dom'\nimport Home from './components/Home';\nimport Login from './components/Login';\n// import Register from './components/Register';\nimport ResetPassword from './components/ResetPassword';\nimport VideoChat from './components/VideoChat'\nimport Room from './components/Room'\n\n\n\n\n\n\nReactDOM.render(\n  <Router>\n    \n  \n    <Routes>\n    \n      <Route path =\"/\" element={<Home/>}>\n      </Route>\n      <Route path =\"/login\" element={<Login/>}/>\n      {/* <Route path =\"/register\" element={<Register/>}/> */}\n      <Route path =\"/reset-password\" element={<ResetPassword/>}/>\n      <Route path =\"/video-chat\" element={<VideoChat/>}/>\n      <Route path=\"/room/:roomID\" element = {<Room/>}/>\n    </Routes>\n  </Router> ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}